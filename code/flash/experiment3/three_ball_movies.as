package{	import Box2D.Collision.Shapes.b2CircleShape;	import Box2D.Collision.Shapes.b2PolygonShape;	import Box2D.Collision.Shapes.b2Shape;	import Box2D.Common.*;	import Box2D.Common.Math.*;	import Box2D.Dynamics.*;	import Box2D.Dynamics.Contacts.*;	import Box2D.Dynamics.Joints.*;	import Box2D.Dynamics.b2Body;	import Box2D.Dynamics.b2BodyDef;	import Box2D.Dynamics.b2ContactListener;	import Box2D.Dynamics.b2DebugDraw;	import Box2D.Dynamics.b2Fixture;	import Box2D.Dynamics.b2FixtureDef;	import Box2D.Dynamics.b2World;		import flash.display.InteractiveObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.net.*;	import flash.utils.getTimer;	public class three_ball_movies extends Sprite	{		public function three_ball_movies(flashPattern:uint, aball_int:int, bball_int:int, stopClip:Number)		{					 						//physics variables			var flashPattern:uint ;			var stopClip:Number; 			var aball_int:int ;			var bball_int:int;			var ffRate:Number = 1; //can be changed to speed up the clip			var startClip:Number = 0; 			var timer:int = startClip;						//Scaling constant 			var SCALE:Number = 60; //--> pixel to meter 			var WIDTH:Number = 800;			var HEIGHT:Number = 600;			var speed:Number = 3;								//Creating the world			var gravity:b2Vec2 = new b2Vec2(0,0); //x and y coordinate			var allowSleep:Boolean = false;			var world:b2World = new b2World(gravity,allowSleep);						//Balls			var body1posx:Number;				var body1posy:Number;			var body1linx:Number;			var body1liny:Number;						var body2posx:Number; 			var body2posy:Number;			var body2linx:Number;			var body2liny:Number;			var body3posx:Number; 			var body3posy:Number;			var body3linx:Number;			var body3liny:Number;								//////////////////////////////////////////////////////			// Create Objects				//////////////////////////////////////////////////////						//Creating Objects in the world  			//1. Body definition			//2. Body			//3. Shape 			//4. Fixture definition 			//5. Create fixture 								//Walls						var topWallBody:b2Body = createWalls((WIDTH/2)/SCALE,10/SCALE, (WIDTH/2)/SCALE,(20/2)/SCALE,"topWall");			var bottomWallBody:b2Body = createWalls((WIDTH/2)/SCALE,590/SCALE, (WIDTH/2)/SCALE,(20/2)/SCALE,"bottomWall");			var topLeftWallBody:b2Body = createWalls(10/SCALE,100/SCALE, 10/SCALE,100/SCALE,"topLeftWall");			var bottomLeftWallBody:b2Body = createWalls(10/SCALE,(HEIGHT-100)/SCALE, 10/SCALE,100/SCALE,"bottomLeftWall");						function createWalls(positionX,positionY,halfwidth,halfheight,userdata):b2Body{				//def				var wallBodyDef:b2BodyDef = new b2BodyDef();				wallBodyDef.position.Set(positionX,positionY); //position of the body				wallBodyDef.type = b2Body.b2_staticBody; //determines the body type					var wallBody:b2Body = world.CreateBody(wallBodyDef); //adds the body to the world				//shape				var wallShape:b2PolygonShape = new b2PolygonShape(); //box shape 				wallShape.SetAsBox(halfwidth,halfheight);				//fixture 				var wallFixtureDef:b2FixtureDef = new b2FixtureDef();				wallFixtureDef.shape = wallShape;				wallFixtureDef.density = 1;				wallFixtureDef.friction = 0;				wallFixtureDef.restitution = 1;				wallBody.SetUserData(userdata);				wallBody.CreateFixture(wallFixtureDef); //assign fixture definition to the body				return wallBody;			}							patterns_func();			function patterns_func(){			//Patterns				switch (flashPattern){				case 1: 					// e, e|A, e|B, e|AB; note only e|A if A is not removed after the first interaction   					body1posx = (WIDTH + 30)/SCALE;					body1posy = (150)/SCALE;					body1linx = speed*-1;					body1liny = speed*-0;										body2posx = (WIDTH + 75)/SCALE; 					body2posy = (280)/SCALE;					body2linx = speed*-1.2;					body2liny = speed*-.4;										body3posx = (WIDTH + 155)/SCALE; 					body3posy = (70)/SCALE;					body3linx = speed*-1.3;					body3liny = speed*0;					break;								case 2: //e, e|A, e|B, e|AB					body1posx = (200)/SCALE;					body1posy = (350)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (450)/SCALE;					body2linx = speed*-1;					body2liny = speed*-.6;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (100)/SCALE;					body3linx = speed*-1;					body3liny = speed*.55;					break;								case 3: 					//e, e|A, e|B, E|AB; Joint causation: red ball at rest  					body1posx = (WIDTH/2-55)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (HEIGHT-550)/SCALE;					body2linx = speed*-1;					body2liny = speed*.45;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (HEIGHT-50)/SCALE;					body3linx = speed*-1;					body3liny = speed*-.45;					break;								case 4: 					//e e|A e|B e|AB    					body1posx = (WIDTH+30)/SCALE;					body1posy = (410)/SCALE;					body1linx = speed*-.75;					body1liny = speed*0;										body2posx = (WIDTH+270)/SCALE; 					body2posy = (550)/SCALE;					body2linx = speed*-1.3;					body2liny = speed*-.23;										body3posx = (WIDTH + 250)/SCALE; 					body3posy = (50)/SCALE;					body3linx = speed*-1.1;					body3liny = speed*.2;					break;								case 5: 					// e, e|A, E|B, e|AB   					body1posx = (300)/SCALE;					body1posy = (450)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (200)/SCALE; 					body2posy = (350)/SCALE;					body2linx = speed*0;					body2liny = speed*0;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1;					body3liny = speed*-0.15;					break;								case 6: //e, e|A, E|B, e|AB					body1posx = (WIDTH + 120)/SCALE;					body1posy = (500)/SCALE;					body1linx = speed*-.9;					body1liny = speed*-0.4;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (550)/SCALE;					body2linx = speed*-.9;					body2liny = speed*-0.4;										body3posx = (WIDTH + 170)/SCALE; 					body3posy = (220)/SCALE;					body3linx = speed*-.9;					body3liny = speed*.3;					break;								case 7: 					//e, e|A, E|B, E|AB; causal chain: only C moving  					body1posx = (150)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (350)/SCALE; 					body2posy = (HEIGHT/2)/SCALE;					body2linx = speed*0;					body2liny = speed*0;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (HEIGHT/2)/SCALE;					body3linx = speed*-1;					body3liny = speed*0;					break;					//Flip ball A and B 					// body1posx = (150)/SCALE;					// body1posy = (HEIGHT/2)/SCALE;					// body1linx = speed*0;					// body1liny = speed*0;										// body3posx = (350)/SCALE; 					// body3posy = (HEIGHT/2)/SCALE;					// body3linx = speed*0;					// body3liny = speed*0;										// body2posx = (WIDTH + 30)/SCALE; 					// body2posy = (HEIGHT/2)/SCALE;					// body2linx = speed*-1;					// body2liny = speed*0;					// break;								case 8: //e, e|A, E|B, E|AB					body1posx = (300)/SCALE;					body1posy = (300)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 100)/SCALE; 					body2posy = (550)/SCALE;					body2linx = speed*-.9;					body2liny = speed*-0.3;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (150)/SCALE;					body3linx = speed*-.9;					body3liny = speed*.3;					break;								case 9: 					//e, E|A, e|B, e|AB; interesting prevention case					body1posx = (100)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (HEIGHT/2)/SCALE;					body2linx = speed*-0.9;					body2liny = speed*0;										body3posx = (WIDTH + 60)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1.1;					body3liny = speed*-.3;					break;								case 10: //e, E|A, e|B, e|AB					body1posx = (300)/SCALE;					body1posy = (300)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (450)/SCALE;					body2linx = speed*-.9;					body2liny = speed*-.3;										body3posx = (WIDTH + 100)/SCALE; 					body3posy = (50)/SCALE;					body3linx = speed*-1;					body3liny = speed*0.5;					break;								case 11: //e, E|A, e|B, E|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (450)/SCALE;					body1linx = speed*-0.8;					body1liny = speed*0;										body2posx = (WIDTH + 100)/SCALE; 					body2posy = (250)/SCALE;					body2linx = speed*-1;					body2liny = speed*.6;										body3posx = (WIDTH + 230)/SCALE; 					body3posy = (540)/SCALE;					body3linx = speed*-1.2;					body3liny = speed*0;					break;								case 12: //e, E|A, e|B, E|AB					body1posx = (WIDTH + 40)/SCALE;					body1posy = (150)/SCALE;					body1linx = speed*-0.9;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (300)/SCALE;					body2linx = speed*-0.8;					body2liny = speed*-0.5;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-.9;					body3liny = speed*-.3;					break;								case 13: 					//e, E|A, E|B, e|AB; prevention					body1posx = (100)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (280)/SCALE;					body2linx = speed*-0.9;					body2liny = speed*0.06;										body3posx = (WIDTH + 180)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1.2;					body3liny = speed*-.4;					break;								case 14: //e, E|A, E|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (400)/SCALE;					body1linx = speed*-0.8;					body1liny = speed*-0.2;										body2posx = (WIDTH + 200)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-1*1.04;					body2liny = speed*0.5*1.04;										body3posx = (WIDTH + 220)/SCALE; 					body3posy = (500)/SCALE;					body3linx = speed*-1.1;					body3liny = speed*-0.45;					break;								case 15: 					body1posx = (100)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (430)/SCALE;					body2linx = speed*-1;					body2liny = speed*-.15;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (170)/SCALE;					body3linx = speed*-1;					body3liny = speed*.15;					break;								case 16: 					//e, E|A, E|B, E|AB; preemption					body1posx = (WIDTH/2-230)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (430)/SCALE;					body2linx = speed*-1;					body2liny = speed*-.18;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (170)/SCALE;					body3linx = speed*(-3/4);					body3liny = speed*(.18*(3/4));					break;								case 17: //E, e|A, e|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (300)/SCALE;					body1linx = speed*-0.85;					body1liny = speed*-0;										body2posx = (WIDTH + 30)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-1;					body2liny = speed*0.7;										body3posx = (WIDTH + 120)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1;					body3liny = speed*-0.45;					break;								case 18: //E, e|A, e|B, e|AB					body1posx = (WIDTH + 50)/SCALE;					body1posy = (300)/SCALE;					body1linx = speed*-.8;					body1liny = speed*-0;										body2posx = (WIDTH + 40)/SCALE; 					body2posy = (550)/SCALE;					body2linx = speed*-.8;					body2liny = speed*-0.4;										body3posx = (WIDTH + 30)/SCALE; 					body3posy = (50)/SCALE;					body3linx = speed*-.7;					body3liny = speed*0.5;					break;								case 19: //E, e|A, e|B, E|AB; joint causation 					body1posx = (WIDTH + 30)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*-1;					body1liny = speed*0;										body2posx = (WIDTH + 50)/SCALE; 					body2posy = (HEIGHT-550)/SCALE;					body2linx = speed*-1;					body2liny = speed*.45;										body3posx = (WIDTH + 50)/SCALE; 					body3posy = (HEIGHT-50)/SCALE;					body3linx = speed*-1;					body3liny = speed*-.45;					break;								case 20: //E, e|A, e|B, E|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (350)/SCALE;					body1linx = speed*-0.8;					body1liny = speed*-0;										body2posx = (WIDTH + 90)/SCALE; 					body2posy = (500)/SCALE;					body2linx = speed*-1;					body2liny = speed*-0.4;										body3posx = (WIDTH + 120)/SCALE; 					body3posy = (50)/SCALE;					body3linx = speed*-1*0.97;					body3liny = speed*0.45*0.97;					break;								case 21: 					//E, e|A, E|B, e|AB; preventive chain  					body1posx = (WIDTH + 30)/SCALE;					body1posy = (350)/SCALE;					body1linx = speed*-1;					body1liny = speed*0;										body2posx = (WIDTH + 60)/SCALE; 					body2posy = (550)/SCALE;					body2linx = speed*-1.1;					body2liny = speed*-0.5;										body3posx = (WIDTH + 165)/SCALE; 					body3posy = (355)/SCALE;					body3linx = speed*-1.2;					body3liny = speed*-0.2;					break;								case 22: //E, e|A, E|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (500)/SCALE;					body1linx = speed*-0.8*1.1;					body1liny = speed*-0.2*1.1;										body2posx = (80)/SCALE; 					body2posy = (350)/SCALE;					body2linx = speed*-0;					body2liny = speed*-0;										body3posx = (WIDTH + 100)/SCALE; 					body3posy = (75)/SCALE;					body3linx = speed*-1*0.9;					body3liny = speed*0.4*0.9;					break;								case 23: 					//E, e|A, E|B, E|AB; double prevention					body1posx = (WIDTH+30)/SCALE;					body1posy = (350)/SCALE;					body1linx = speed*-.79;					body1liny = speed*0;										body2posx = (WIDTH + 120)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-.9;					body2liny = speed*.37;										body3posx = (WIDTH + 360)/SCALE; 					body3posy = (480)/SCALE;					body3linx = speed*-1.3;					body3liny = speed*-.4;					break;								case 24: 					//E, e|A, E|B, E|AB; chain: E would go in   					body1posx = (WIDTH+30)/SCALE;					body1posy = (250)/SCALE;					body1linx = speed*-.75;					body1liny = speed*0;										body2posx = (WIDTH+170)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-1;					body2liny = speed*.35;										body3posx = (WIDTH + 250)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1.1;					body3liny = speed*-.2;					break;								case 25: //E, E|A, e|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (250)/SCALE;					body1linx = speed*-.8;					body1liny = speed*0;										body2posx = (WIDTH + 230)/SCALE; 					body2posy = (100)/SCALE;					body2linx = speed*-1;					body2liny = speed*.3;										body3posx = (WIDTH + 430)/SCALE; 					body3posy = (600)/SCALE;					body3linx = speed*-1.2*1.05;					body3liny = speed*-.35*1.05;					break;								case 26: //E, E|A, e|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (300)/SCALE;					body1linx = speed*-0.8;					body1liny = speed*0;										body2posx = (WIDTH + 80)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-1;					body2liny = speed*.7;										body3posx = (80)/SCALE; 					body3posy = (320)/SCALE;					body3linx = speed*0;					body3liny = speed*0;					break;								case 27: //E, E|A, e|B, E|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (250)/SCALE;					body1linx = speed*-.8;					body1liny = speed*0;										body2posx = (WIDTH + 250)/SCALE; 					body2posy = (150)/SCALE;					body2linx = speed*-1.2;					body2liny = speed*.15;										body3posx = (WIDTH + 130)/SCALE; 					body3posy = (550)/SCALE;					body3linx = speed*-1.2*0.8;					body3liny = speed*-.5*0.8;					break;								case 28: //E, E|A, e|B, E|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (200)/SCALE;					body1linx = speed*-0.85;					body1liny = speed*.15;										body2posx = (WIDTH + 170)/SCALE; 					body2posy = (500)/SCALE;					body2linx = speed*-1;					body2liny = speed*-.23;										body3posx = (100)/SCALE; 					body3posy = (350)/SCALE;					body3linx = speed*0;					body3liny = speed*0;					break;								case 29: //E, E|A, E|B, e|AB					body1posx = (WIDTH + 30)/SCALE;					body1posy = (350)/SCALE;					body1linx = speed*-.8;					body1liny = speed*0;										body2posx = (WIDTH +250)/SCALE; 					body2posy = (500)/SCALE;					body2linx = speed*-1;					body2liny = speed*-.35;										body3posx = (WIDTH + 430)/SCALE; 					body3posy = (150)/SCALE;					body3linx = speed*-1.2*1.05;					body3liny = speed*.25*1.05;					break;								case 30: 					//E, E|A, E|B, e|AB; preventive chain 					body1posx = (WIDTH + 30)/SCALE;					body1posy = (250)/SCALE;					body1linx = speed*-.75;					body1liny = speed*0;										body2posx = (WIDTH + 120)/SCALE; 					body2posy = (70)/SCALE;					body2linx = speed*-0.9;					body2liny = speed*0.08;										body3posx = (400)/SCALE; 					body3posy = (150)/SCALE;					body3linx = speed*0;					body3liny = speed*0;					break;								case 31: 					//E, E|A, E|B, E|AB; causal chain: A, B and C moving 					body1posx = (WIDTH+30)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*-.75;					body1liny = speed*0;										body2posx = (WIDTH+350)/SCALE; 					body2posy = (HEIGHT/2)/SCALE;					body2linx = speed*-1;					body2liny = speed*0;										body3posx = (WIDTH + 600)/SCALE; 					body3posy = (HEIGHT/2)/SCALE;					body3linx = speed*-1.3;					body3liny = speed*0;					break;								case 32: 					//E, E|A, E|B, E|AB; interesting almost case (no counterfactual for any ball)   					body1posx = (WIDTH+30)/SCALE;					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*-.75;					body1liny = speed*0;										body2posx = (WIDTH+150)/SCALE; 					body2posy = (50)/SCALE;					body2linx = speed*-1;					body2liny = speed*.3;										body3posx = (WIDTH + 200)/SCALE; 					body3posy = (350)/SCALE;					body3linx = speed*-1.1;					body3liny = speed*-.1;					break;				//} 				//ADDITIONAL CASES NOT USED IN THE EXPERIMENT: 				case 33: 					//E, E|A, E|B, E|AB; interesting almost case (no counterfactual for any ball)   					body1posx = (WIDTH/2)/SCALE;					body1posy = (HEIGHT-150)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH+30)/SCALE; 					body2posy = (HEIGHT-130)/SCALE;					body2linx = speed*-1;					body2liny = speed*0;										body3posx = (WIDTH + 50)/SCALE; 					body3posy = (300)/SCALE;					body3linx = speed*-1;					body3liny = speed*0;					break;				case 34: 					//E, E|A, E|B, E|AB; interesting almost case (no counterfactual for any ball)   					body1posx = (WIDTH/2)/SCALE;					body1posy = (HEIGHT-150)/SCALE;					body1linx = speed*0;					body1liny = speed*0;										body2posx = (WIDTH+30)/SCALE; 					body2posy = (HEIGHT-120)/SCALE;					body2linx = speed*-1;					body2liny = speed*0;										body3posx = (WIDTH + 110)/SCALE; 					body3posy = (300)/SCALE;					body3linx = speed*-1;					body3liny = speed*0;					break;				//additional interesting test cases				case 35: //overdetermined prevention					body1posx = (WIDTH+30)/SCALE;					body1posy = (HEIGHT/2+5)/SCALE;					body1linx = speed*-1;					body1liny = speed*0					body2posx = (WIDTH + 30)/SCALE; 					body2posy = (HEIGHT-50)/SCALE;					body2linx = speed*-1;					body2liny = speed*-0.45;					body3posx = 80/SCALE; 					body3posy = (HEIGHT/2+5)/SCALE;					body3linx = speed*0;					body3liny = speed*0;										break;				case 36: //whether-cause by speeding up 					body1posx = (WIDTH + 30)/SCALE; 					body1posy = (HEIGHT/2)/SCALE;					body1linx = speed*-0.75;					body1liny = speed*0;														body2posx = (WIDTH+500)/SCALE; 					body2posy = (HEIGHT/2)/SCALE;					body2linx = speed*-1.5;					body2liny = speed*0;					body3posx = (WIDTH + 200)/SCALE;					body3posy = (10)/SCALE;					body3linx = speed*-1;					body3liny = speed*0.4;					break;				} 							}						//BALLS			var ball1Body:b2Body = createBalls(body1posx,body1posy, 1, new b2Vec2(body1linx,body1liny), 0,"effectball",b2Body.b2_dynamicBody);			var ball2Body:b2Body = createBalls(body2posx,body2posy, 1, new b2Vec2(body2linx,body2liny), 0,"causeball1",b2Body.b2_dynamicBody);			var ball3Body:b2Body = createBalls(body3posx,body3posy, 1, new b2Vec2(body3linx,body3liny), 0,"causeball2",b2Body.b2_dynamicBody);						function createBalls(positionX,positionY,density,linearVel,linearDamp,userdata,type):b2Body{				//def				var ballBodyDef:b2BodyDef= new b2BodyDef();				ballBodyDef.position.Set(positionX,positionY); //position of the body				ballBodyDef.type = type; //determines the body type				ballBodyDef.bullet = true; //prevents tunelling for fast moving objects				ballBodyDef.linearVelocity = linearVel; //velocity in x and y direction (x:positive --> right, y:positive --> down)				ballBodyDef.linearDamping = linearDamp; //linear damping 				//body				var ballBody:b2Body = world.CreateBody(ballBodyDef); //adds the body to the world				//shape				var ballShape:b2CircleShape = new b2CircleShape(.5); //radius of the circle (.5 m)				//fixture 				var ballFixtureDef:b2FixtureDef = new b2FixtureDef();				ballFixtureDef.shape = ballShape;				ballFixtureDef.density = density;				ballFixtureDef.friction = 0;				ballFixtureDef.restitution = 1;								ballBody.SetUserData(userdata);				ballBody.CreateFixture(ballFixtureDef); //assign fixture definition to the body								return ballBody;			}																		//////////////////////////////////////////////////////			// SKINS			//////////////////////////////////////////////////////			var ball2Skin:MovieClip = new causeball1();  				addChild(ball2Skin);			var ball3Skin:MovieClip = new causeball2();  				addChild(ball3Skin);			var ball1Skin:MovieClip = new effectball();  				addChild(ball1Skin);			//add skins to balls 			function drawBalls():void{					ball2Skin.x = ball2Body.GetPosition().x*SCALE;				ball2Skin.y = ball2Body.GetPosition().y*SCALE;				ball2Skin.visible = true;				ball3Skin.x = ball3Body.GetPosition().x*SCALE;				ball3Skin.y = ball3Body.GetPosition().y*SCALE;				ball3Skin.visible = true;				ball1Skin.x = ball1Body.GetPosition().x*SCALE;				ball1Skin.y = ball1Body.GetPosition().y*SCALE;				ball1Skin.visible = true;				if(aball_int == 0){ball2Skin.visible = false;}				if(bball_int == 0){ball3Skin.visible = false;}							}						//remove balls						if(aball_int==0){world.DestroyBody(ball2Body);}				if(bball_int==0){world.DestroyBody(ball3Body);}				//////////////////////////////////////////////////////			// UPDATE FUNCTION			//////////////////////////////////////////////////////						timer = startClip;			addEventListener(Event.ENTER_FRAME, update);								function update(e:Event):void{											outerLoop: for (var i:Number = 0; i < ffRate;	i++){										var timeStep:Number = 1/30; 					//We must update the world at every frame. 					//We can do it with Step function. Step has two parameters: the first is the time interval, in seconds. 					//It means at every frame I am going to update the world as if 1/30s passed					var velocityIterations:int = 10;					var positionIterations:int = 10;																		//speed up a ball (uncomment here)					// if (timer == 50){					// 	body2linx = body2linx*2;					// 	body2liny = body2liny*2;					// 	ball2Body.SetLinearVelocity(new b2Vec2(body2linx,body2liny));					// }					drawBalls(); //call draw balls function to update position of the movie clips on the stage															world.Step(timeStep,velocityIterations,positionIterations);					world.ClearForces();					timer = timer + 1; //updates the timer				//checks when to stop 				if (timer == stopClip){					removeEventListener(Event.ENTER_FRAME, update);					dispatchEvent(new Event("clipFinished"));							break outerLoop; 																		}			}		}				}	}}
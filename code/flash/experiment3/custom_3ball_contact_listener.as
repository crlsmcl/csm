package {	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Common.*;	import Box2D.Common.Math.*;	import Box2D.Dynamics.*;	import Box2D.Dynamics.Contacts.*;	import Box2D.Dynamics.Joints.*;		import flash.display.InteractiveObject;		class custom_3ball_contact_listener extends b2ContactListener {		var collisionABStart:int = 0;		var collisionAEStart:int = 0;		var collisionBEStart:int = 0;		var collisionWallStartA:int = 0;		var collisionWallStartB:int = 0;		var collisionWallStartE:int = 0;		override public function BeginContact(contact:b2Contact):void {			// getting the fixtures that collided			var fixtureA:b2Fixture=contact.GetFixtureA();			var fixtureB:b2Fixture=contact.GetFixtureB();						//balls			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'causeball2') ||				(fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'causeball1')){												collisionABStart = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'effectball') ||				(fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'causeball1')){												collisionAEStart = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'effectball') ||				(fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'causeball2')){												collisionBEStart = 1;			}			//walls			//causeball 1			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'topWall')||				(fixtureB.GetBody().GetUserData() == 'causeball1' && fixtureA.GetBody().GetUserData() == 'topWall')){ 								collisionWallStartA = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'bottomWall')||				(fixtureB.GetBody().GetUserData() == 'causeball1' && fixtureA.GetBody().GetUserData() == 'bottomWall')){ 								collisionWallStartA = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'topLeftWall')||				(fixtureB.GetBody().GetUserData() == 'causeball1' && fixtureA.GetBody().GetUserData() == 'topLeftWall')){ 								collisionWallStartA = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball1' && fixtureB.GetBody().GetUserData() == 'bottomLeftWall')||				(fixtureB.GetBody().GetUserData() == 'causeball1' && fixtureA.GetBody().GetUserData() == 'bottomLeftWall')){ 								collisionWallStartA = 1;			}			//causeball 2			if ((fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'topWall')||				(fixtureB.GetBody().GetUserData() == 'causeball2' && fixtureA.GetBody().GetUserData() == 'topWall')){ 								collisionWallStartB = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'bottomWall')||				(fixtureB.GetBody().GetUserData() == 'causeball2' && fixtureA.GetBody().GetUserData() == 'bottomWall')){ 								collisionWallStartB = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'topLeftWall')||				(fixtureB.GetBody().GetUserData() == 'causeball2' && fixtureA.GetBody().GetUserData() == 'topLeftWall')){ 								collisionWallStartB = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'causeball2' && fixtureB.GetBody().GetUserData() == 'bottomLeftWall')||				(fixtureB.GetBody().GetUserData() == 'causeball2' && fixtureA.GetBody().GetUserData() == 'bottomLeftWall')){ 								collisionWallStartB = 1;			}			//effectball			if ((fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'topWall')||				(fixtureB.GetBody().GetUserData() == 'effectball' && fixtureA.GetBody().GetUserData() == 'topWall')){ 								collisionWallStartE = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'bottomWall')||				(fixtureB.GetBody().GetUserData() == 'effectball' && fixtureA.GetBody().GetUserData() == 'bottomWall')){ 								collisionWallStartE = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'topLeftWall')||				(fixtureB.GetBody().GetUserData() == 'effectball' && fixtureA.GetBody().GetUserData() == 'topLeftWall')){ 								collisionWallStartE = 1;			}			if ((fixtureA.GetBody().GetUserData() == 'effectball' && fixtureB.GetBody().GetUserData() == 'bottomLeftWall')||				(fixtureB.GetBody().GetUserData() == 'effectball' && fixtureA.GetBody().GetUserData() == 'bottomLeftWall')){ 								collisionWallStartE = 1;			}		}						override public function EndContact(contact:b2Contact):void {					}				//GETTER FUNCTIONS 				//balls		public function getCollisionABStart():int{			return collisionABStart		}		public function getCollisionAEStart():int{			return collisionAEStart		}		public function getCollisionBEStart():int{			return collisionBEStart		}		//walls		public function getCollisionWallStartA():int{			return collisionWallStartA		}		public function getCollisionWallStartB():int{			return collisionWallStartB		}		public function getCollisionWallStartE():int{			return collisionWallStartE		}		//SETTER FUNCTIONS 		public function setCollisionABStart():int{			collisionABStart = 0;			return collisionABStart		}		public function setCollisionAEStart():int{			collisionAEStart = 0;			return collisionAEStart		}		public function setCollisionBEStart():int{			collisionBEStart = 0;			return collisionBEStart		}		public function setCollisionWallStartA():int{			collisionWallStartA = 0;			return collisionWallStartA		}		public function setCollisionWallStartB():int{			collisionWallStartB = 0;			return collisionWallStartB		}		public function setCollisionWallStartE():int{			collisionWallStartE = 0;			return collisionWallStartE		}	}}